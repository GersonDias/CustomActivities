<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!-- 
        This file is used to build the TFS 2010 versions of the Custom Assemblies
    -->
    <Import Project="$(MSBuildExtensionsPath)\ExtensionPack\4.0\MSBuild.ExtensionPack.tasks"/>
    <PropertyGroup>
        <ReleaseVersion>June 2012</ReleaseVersion>
        <Configuration>Release|Any CPU</Configuration>
        <!-- If you only have VS11 installed, pass this VisualStudioVersion property in as 11.0 -->
        <VisualStudioVersion>10.0</VisualStudioVersion>
    </PropertyGroup>

    <Target Name="PreCheckin" DependsOnTargets="StyleCop;Compile"/>

    <Target Name="PreCompile" BeforeTargets="Compile">
        <ItemGroup>
            <VS2010Files Include="..\AssemblyReferences2010\*.*"/>
            <FileAtt Include="..\Common\CommonAssemblyInfo.cs">
                <Attributes>Normal</Attributes>
            </FileAtt>
        </ItemGroup>
        <!-- Clean out AssemblyReferences -->
        <MSBuild.ExtensionPack.FileSystem.Folder TaskAction="RemoveContent" Path="..\AssemblyReferences" Force="true"/>
        <!-- Add the VS2010 versions -->
        <Microsoft.Build.Tasks.Copy OverwriteReadOnlyFiles="true" SourceFiles="@(VS2010Files)" DestinationFolder="..\AssemblyReferences"/>

        <MSBuild.ExtensionPack.FileSystem.File TaskAction="SetAttributes" Files="@(FileAtt)"/>
        <Delete Files="..\Common\CommonAssemblyInfo.cs" />
        <Microsoft.Build.Tasks.Copy OverwriteReadOnlyFiles="true" SourceFiles="..\Common\CommonAssemblyInfo2010.cs" DestinationFiles="..\Common\CommonAssemblyInfo.cs"/>
    </Target>

    <Target Name="PostCompile" AfterTargets="Compile">
        <ItemGroup>
            <VS11Files Include="..\AssemblyReferences11\*.*"/>
            <FileAtt Include="..\Common\CommonAssemblyInfo.cs">
                <Attributes>Normal</Attributes>
            </FileAtt>
        </ItemGroup>
        <!-- Clean out AssemblyReferences -->
        <MSBuild.ExtensionPack.FileSystem.Folder TaskAction="RemoveContent" Path="..\AssemblyReferences" Force="true"/>
        <!-- Add the VS11 versions -->
        <Microsoft.Build.Tasks.Copy OverwriteReadOnlyFiles="true" SourceFiles="@(VS11Files)" DestinationFolder="..\AssemblyReferences"/>

        <MSBuild.ExtensionPack.FileSystem.File TaskAction="SetAttributes" Files="@(FileAtt)"/>
        <Delete Files="..\Common\CommonAssemblyInfo.cs" />
        <Microsoft.Build.Tasks.Copy OverwriteReadOnlyFiles="true" SourceFiles="..\Common\CommonAssemblyInfo11.cs" DestinationFiles="..\Common\CommonAssemblyInfo.cs"/>
    </Target>

    <Target Name="Package" DependsOnTargets="StyleCop;Compile;CleanFiles;Touch"/>

    <Target Name="StyleCop" Condition="$(SkipStyleCop) != 'true'">
        <Message Text="$(MSBuildProjectDirectory)\..\Settings.StyleCop"/>
        <ItemGroup>
            <StyleCopFiles Include="$(MSBuildProjectDirectory)\..\**\*.cs" Exclude="$(MSBuildProjectDirectory)\..\**\*.designer.cs;
                                                                                    $(MSBuildProjectDirectory)\..\Test*\**\*.*;
                                                                                    $(MSBuildProjectDirectory)\..\Common\Common*;
                                                                                    $(MSBuildProjectDirectory)\..\Buildbinaries\**\*.*"/>
        </ItemGroup>
        <MSBuild.ExtensionPack.CodeQuality.StyleCop TaskAction="Scan" SourceFiles="@(StyleCopFiles)" ShowOutput="false" ForceFullAnalysis="true" CacheResults="false" logFile="StyleCopLog.txt" SettingsFile="$(MSBuildProjectDirectory)\..\Settings.StyleCop">
            <Output TaskParameter="Succeeded" PropertyName="AllPassed"/>
            <Output TaskParameter="ViolationCount" PropertyName="Violations"/>
            <Output TaskParameter="FailedFiles" ItemName="Failures"/>
        </MSBuild.ExtensionPack.CodeQuality.StyleCop>
        <Message Text="...StyleCop complete. $(Violations) violations"/>
        <Error Condition="'$(Violations)' != '0'" Text="Stylecop Failed: $(Violations) violations" />
    </Target>

    <Target Name="Compile">
        <MSBuild.ExtensionPack.VisualStudio.VSDevEnv FilePath="..\TFSBuildExtensions.sln" Version="$(VisualStudioVersion)" Configuration="$(Configuration)" Rebuild="true">
            <Output TaskParameter="ExitCode" PropertyName="Exit" />
        </MSBuild.ExtensionPack.VisualStudio.VSDevEnv>
        <Message Text="ExitCode: $(Exit)"/>
        <Error Condition="'$(Exit)' != '0'" Text="Compile Failed" />
    </Target>

    <Target Name="CleanFiles">
        <ItemGroup>
            <FilesToDelete Include="..\BuildBinaries\*.*"
                           Exclude="..\BuildBinaries\TfsBuildExtensions*.dll;
                                    ..\BuildBinaries\TfsBuildExtensions*.pdb;
                                    ..\BuildBinaries\Ionic*.dll;"/>
        </ItemGroup>
        <Microsoft.Build.Tasks.Delete Files="@(FilesToDelete)"/>
    </Target>

    <Target Name="Touch">
        <ItemGroup>
            <TouchFiles Include="$(MSBuildProjectDirectory)\..\Buildbinaries\**\*.*"/>
        </ItemGroup>
        <Touch Files="@(TouchFiles)" ForceTouch="true"/>
    </Target>

    <Target Name="UpdateSourceControl">
        <PropertyGroup>
            <WorkspaceFolder Condition="'$(WorkspaceFolder)' == ''">D:\Projects\FreeToDev</WorkspaceFolder>
            <CustomActivitiesFolder Condition="'$(CustomActivitiesFolder)' == ''">$(WorkspaceFolder)\BuildProcessTemplates\CustomActivities</CustomActivitiesFolder>
        </PropertyGroup>
        <ItemGroup>
            <NewAssemblies Include="..\BuildBinaries\TFSBuildExtensions*.dll;..\BuildBinaries\TFSBuildExtensions*.pdb" Exclude="..\BuildBinaries\*Test*;..\BuildBinaries\*_Accessor*;;..\BuildBinaries\*.instr.*"/>
        </ItemGroup>
        <MSBuild.ExtensionPack.VisualStudio.TfsSource TaskAction="Checkout" ItemCol="@(FilesToCheckout)" WorkingDirectory="$(WorkspaceFolder)" Version="2012"/>
        <Microsoft.Build.Tasks.Copy SourceFiles="@(NewAssemblies)" DestinationFolder="$(CustomActivitiesFolder)"/>
        <MSBuild.ExtensionPack.VisualStudio.TfsSource TaskAction="Checkin" ItemCol="@(FilesToCheckout)" WorkingDirectory="$(WorkspaceFolder)" Version="2012"/>
    </Target>
</Project>